name: CI

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  build-node10:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use NodeJs 10.x
        uses: actions/setup-node@v1
        with:
          node-version: "10.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set yarn global bin path
        run: |
          yarn config set prefix $(yarn cache dir)

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ env.cache-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-version }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-

      - name: Installing dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
            echo "YARN CACHE CHANGED"
            yarn install

      - run: yarn test

  build-node12:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Use NodeJs 12.x
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Set yarn global bin path
        run: |
          yarn config set prefix $(yarn cache dir)

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ env.cache-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ env.cache-version }}-
            ${{ runner.os }}-yarn-
            ${{ runner.os }}-

      - name: Installing dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
            echo "YARN CACHE CHANGED"
            yarn install

      - run: yarn test